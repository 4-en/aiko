from .base_pipeline import BasePipeline
from aiko2.core import Conversation, Message, User
from aiko2.config import Config

class Pipeline(BasePipeline):
    """
    Pipeline class to represent a pipeline.
    This class controls the retrieval and generation process.
    At minimum, the pipeline should be able to generate a response
    using the generate method.
    """

    def __init__(self, retriever, generator, refiner=None, config:Config=None):
        """
        Initialize the pipeline.

        This simple pipeline consists of a retriever, generator, and refiner.
        The retriever adds context to the conversation, which is then passed
        to the generator to generate a response. The refiner can be used to
        refine the response generated by the generator.

        Pipeline:
            input: Conversation
            \/
            retriever
            \/
            generator
            \/
            refiner
            \/
            output: Message | None

        Parameters
        ----------
        retriever : Retriever
            The retriever to use to retrieve messages.
        generator : Generator
            The generator to use to generate responses.
        refiner : Refiner | None, optional
            The refiner to use to refine responses.
            If None, no refiner will be used.
        config : Config | None, optional
            The configuration to use for the pipeline.
            If None, the default configuration will be used.
        """
        self.retriever = retriever
        self.generator = generator
        self.refiner = refiner
        self.config = config or Config()

    def generate(self, conversation: Conversation) -> Message | None:
        """
        Generate a response based on the conversation.

        Parameters
        ----------
        conversation : Conversation
            The conversation to generate a response from.

        Returns
        -------
        Message | None
            The generated response.
            If no response was generated, return None.
            This can happen if the pipeline is setup to decide 
            whether to generate a response or not, for example if
            the message wasn't directed at the AI.
        """
        return None