from .base_retriever import BaseRetriever
from aiko.core.retrieval_results import RetrievalResults, QueryResults
from aiko.core import Conversation, Message

class MultiRetriever(BaseRetriever):
    """
    A retriever that uses multiple retrievers to retrieve information.
    Retrieved information from child retrievers is merged and possibly
    deduplicated and reranked.
    """
    
    def __init__(self, *retrievers: BaseRetriever):
        """
        Initialize the multi retriever.
        
        Parameters
        ----------
        retrievers : List[BaseRetriever]
            A list of retrievers to use to retrieve information.
        """
        self.retrievers = []
        if retrievers:
            self.retrievers = retrievers
        
    def _merge_results(self, results: list[RetrievalResults]) -> RetrievalResults:
        """
        Merge the results of the individual retrievers.
        
        Parameters
        ----------
        results : List[RetrievalResults]
            A list of retrieval results from individual retrievers.
            
        Returns
        -------
        RetrievalResults
            The merged retrieval results.
        """
        # Merge the results
        if len(results) == 0:
            return RetrievalResults()
        
        merged_results = results[0]
        for result in results[1:]:
            merged_results.extend(result)

        return merged_results
        
    def retrieve(self, conversation: Conversation, queries: list[str], domain:str=None) -> RetrievalResults:
        """
        Retrieve information based on the queries generated by the evaluator.
        
        Parameters
        ----------
        conversation : Conversation
            The conversation to retrieve information for.
        queries : List[str]
            A list of queries to retrieve information.
            
        Returns
        -------
        RetrievalResults
            The retrieval context containing the results of the retrieval operation.
        """
        
        individual_results = []
        for retriever in self.retrievers:
            individual_results.append(retriever.retrieve(conversation, queries))
            
        # Merge the results
        merged_results = self.merge_results(individual_results)

        return merged_results
    