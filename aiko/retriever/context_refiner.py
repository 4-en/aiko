from .base_retriever import BaseRetriever
from aiko.core import Conversation, Message, RetrievalResults, Query

class ContextRefiner(BaseRetriever):
    """
    Context refiner class.
    This class refines the context that was retrieved by another retriever
    and evaluats it based on the queries generated by the evaluator and the conversation.
    It also rephrases and combines information to make it more coherent and informative.
    """
    
    def __init__(self, retriever:BaseRetriever):
        """
        Initialize the context refiner.
        
        Parameters
        ----------
        retriever : BaseRetriever
            The retriever to refine the context for.
        """
        self.retriever = retriever
        
    def retrieve(self, conversation:Conversation, queries:list[Query], domain:str|list[str]=None) -> RetrievalResults:
        """
        Retrieve information based on the queries generated by the evaluator.
        
        Parameters
        ----------
        conversation : Conversation
            The conversation to retrieve information for.
        queries : List[Query]
            A list of queries to retrieve information.
        domain : str | list[str], optional
            The domain to retrieve information from, by default None.
            Can be used to only retrieve information from a specific domain, for example
            for a specific user or specific source.
        
        Returns
        -------
        RetrievalResults
            The retrieval context containing the results of the retrieval operation.
        """
        
        # Retrieve the context
        context = self.retriever.retrieve(conversation, queries, domain)
        
        # Refine the context
        refined_context = self.refine_context(context, conversation, queries)
        
        return refined_context
    
    def refine_context(self, context:RetrievalResults, conversation:Conversation, queries:list[Query]) -> RetrievalResults:
        """
        Refine the context that was retrieved by another retriever.
        
        Parameters
        ----------
        context : RetrievalResults
            The context to refine.
        conversation : Conversation
            The conversation to refine the context for.
        queries : List[Query]
            A list of queries to refine the context for.
        
        Returns
        -------
        RetrievalResults
            The refined context.
        """
        
        # Refine the context
        refined_context = context
        
        # TODO: Implement context refinement using a generative model
        
        # Steps:
        # 1. Generate prompt using the conversation, queries and results
        # 2. Use the prompt to generate a response
        # 2.5. (Optional) Also generate further queries? This could be done as some sort of loop with the evaluator and retriever.
        #      Would need parameters to control the number of iterations and the stopping criteria.
        # 3. Create a new context with the refined response
        # 4. Return the refined context
        
        return refined_context